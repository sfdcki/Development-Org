<apex:page showHeader="false" sidebar="false" docType="html-5.0">

<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" lang="en">
<head>
  <meta charset="utf-8" />
  <meta http-equiv="x-ua-compatible" content="ie=edge" />
  <title>Salesforce Lightning Design System Trailhead Module</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
      <apex:stylesheet value="{!URLFOR($Resource.SLDSVF, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />
</head>
    <apex:remoteObjects >
        <apex:remoteObjectModel name="Account" fields="Id,Name,LastModifiedDate"/>
    </apex:remoteObjects>


  <!-- REQUIRED SLDS WRAPPER -->
  <div class="tcs">

    <!-- MASTHEAD -->
    <p class="slds-text-heading--label slds-m-bottom--small">
      Salesforce Lightning Design System Trailhead Module
    </p>
    <!-- / MASTHEAD -->

    <!-- PAGE HEADER -->
    <!-- / PAGE HEADER -->

<!-- PRIMARY CONTENT WRAPPER -->
<!-- PRIMARY CONTENT WRAPPER -->
<div class="myapp">
	 
  <!-- CREATE NEW ACCOUNT -->
  <div aria-labelledby="newaccountform">

    <!-- CREATE NEW ACCOUNT FORM -->
    <form class="slds-form--stacked" id="add-account-form">
      <!-- BOXED AREA -->
      <fieldset class="slds-box slds-theme--default slds-container--small">

        <legend id="newaccountform" class="slds-text-heading--medium slds-p-vertical--medium">Add a new account</legend>

        <div class="slds-form-element">
          <label class="slds-form-element__label" for="account-name">Name*</label></div>
          <div class="slds-form-element__control slds-is-required">
            <input id="account-name" class="slds-input" type="text" placeholder="New account"/>
          </div>
        <div class="slds-form-element">
          <label class="slds-form-element__label" for="account-name">Company Site*</label></div>
          <div class="slds-form-element__control">
            <input id="acc-cmpsite" class="slds-input" type="text" placeholder="ABC co."/>
          </div>
        <button class="slds-button slds-button--brand slds-m-top--medium" type="submit">Create Account</button>
      </fieldset>
      <!-- / BOXED AREA -->
    </form>
    <!-- CREATE NEW ACCOUNT FORM -->

  </div>
  <!-- / CREATE NEW ACCOUNT -->

      </div>
   <!-- ACCOUNT LIST TABLE -->
  <div id="account-list" class="slds-p-vertical--medium"></div>
  <!-- / ACCOUNT LIST TABLE -->
    </div>
  <!-- / REQUIRED SLDS WRAPPER -->

<!-- JAVASCRIPT -->
<script>
  (function() {
    var account = new SObjectModel.Account();
    var outputDiv = document.getElementById('account-list');

    var updateOutputDiv = function() {

      account.retrieve(
        { orderby: [{ LastModifiedDate: 'DESC' }], limit: 10 },
        function(error, records) {
          if (error) {
            alert(error.message);
          } else {
            // create data table
            var dataTable = document.createElement('table');
            dataTable.className = 'slds-table slds-table--bordered slds-table--cell-buffer slds-no-row-hover';

            // add header row
            var tableHeader = dataTable.createTHead();
            var tableHeaderRow = tableHeader.insertRow();

            var tableHeaderRowCell1 = tableHeaderRow.insertCell(0);
            tableHeaderRowCell1.appendChild(document.createTextNode('Account name'));
            tableHeaderRowCell1.setAttribute('scope', 'col');
            tableHeaderRowCell1.setAttribute('class', 'slds-text-heading--label');

            var tableHeaderRowCell2 = tableHeaderRow.insertCell(1);
            tableHeaderRowCell2.appendChild(document.createTextNode('Account ID'));
            tableHeaderRowCell2.setAttribute('scope', 'col');
            tableHeaderRowCell2.setAttribute('class', 'slds-text-heading--label');

            // build table body
            var tableBody = dataTable.appendChild(document.createElement('tbody'))
            var dataRow, dataRowCell1, dataRowCell2, recordName, recordId;
            records.forEach(function(record) {
              dataRow = tableBody.insertRow();

              dataRowCell1 = dataRow.insertCell(0);
              recordName = document.createTextNode(record.get('Name'));
              dataRowCell1.appendChild(recordName);

              dataRowCell2 = dataRow.insertCell(1);
              recordId = document.createTextNode(record.get('Id'));
              dataRowCell2.appendChild(recordId);   
            });

            if (outputDiv.firstChild) {
              // replace table if it already exists
              // see later in tutorial
              outputDiv.replaceChild(dataTable, outputDiv.firstChild);
            } else {
              outputDiv.appendChild(dataTable);
            }
          }
        }
      );
    }
    updateOutputDiv();
var accountForm = document.getElementById('add-account-form');


var createAccount = function() {
    var accountNameField   = document.getElementById('account-name');
    var accountCompanySite = document.getElementById('acc-cmpsite');
  	var account = new SObjectModel.Account();
  account.create({ Name: accountNameField.value, Site: accountCompanySite.value }, function(error, records) {
    if (error) {
      alert(error.message);
    } else {	
      updateOutputDiv();
      accountNameField.value = '';
      accountCompanySite.value = '';
    }
  });
}
document.addEventListener('submit', function(e) {
  e.preventDefault();
  createAccount();
});
  })();
    

</script>
<!-- / JAVASCRIPT -->


</html>
</apex:page>